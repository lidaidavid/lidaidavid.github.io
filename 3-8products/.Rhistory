false_pos_sim1 <- table_sim1[,2]/table_sim1[,3]
table_sim3 <- table(dt_sim3$sex, dt_sim3$false_pos) %>% addmargins()
false_pos_sim3 <- table_sim3[,2]/table_sim3[,3]
table_sim1 <- table(dt_sim1$sex, dt_sim1$false_neg) %>% addmargins()
false_neg_sim1 <- table_sim1[,2]/table_sim1[,3]
table_sim3 <- table(dt_sim3$sex, dt_sim3$false_neg) %>% addmargins()
false_neg_sim3 <- table_sim3[,2]/table_sim3[,3]
false_pos_sim1
false_pos_sim3
false_neg_sim3
tidy(ineq_sim3)
(dt_sim3 %>% subset(give == 1))$p %>% min
(dt_sim1 %>% subset(give == 1))$p %>% min
(dt_sim3 %>% subset(give == 1))$rank %>% max
n
n - 7367
atrisk_sim1 <- dt_sim1 %>% subset(rank <= other_quota)
atrisk_sim3 <- dt_sim3 %>% subset(rank <= other_quota)
table(atrisk_sim1$sex)
table_sim1 <- table(atrisk_sim1$sex, atrisk_sim1$false_pos) %>% addmargins()
false_pos_sim1 <- table_sim1[,2]/table_sim1[,3]
table_sim3 <- table(atrisk_sim3$sex, atrisk_sim3$false_pos) %>% addmargins()
false_pos_sim3 <- table_sim3[,2]/table_sim3[,3]
table_sim1 <- table(atrisk_sim1$sex, atrisk_sim1$false_neg) %>% addmargins()
false_neg_sim1 <- table_sim1[,2]/table_sim1[,3]
table_sim3 <- table(atrisk_sim3$sex, atrisk_sim3$false_neg) %>% addmargins()
false_neg_sim3 <- table_sim3[,2]/table_sim3[,3]
false_pos_sim1 <- table_sim1[,2]/table_sim1[,3]
false_pos_sim1
false_pos_sim1
false_pos_sim1 <- table_sim1[,2]/table_sim1[,3] %>% round(2)
false_pos_sim1
false_pos_sim1 <- (table_sim1[,2]/table_sim1[,3]) %>% round(2)
false_pos_sim1
false_pos_sim1 <- (table_sim1[,2]/table_sim1[,3]) %>% round(4)
false_pos_sim1
false_pos_sim3 <- (table_sim3[,2]/table_sim3[,3] ) %>% round(4)
false_neg_sim1 <- (table_sim1[,2]/table_sim1[,3] ) %>% round(4)
false_neg_sim3 <- (table_sim3[,2]/table_sim3[,3] ) %>% round(4)
false_pos_sim1
install.packages("qca")
install.packages("QCA")
dt <- read.csv("C:/Users/david/Documents/WeChat Files/lazywindream/FileStorage/File/2019-03/qca data.csv")
dt
library(QCA)
causalChain(dt)
dt
dt1 <- dt[,c("Professionality", "Communication", "Search", "Appearance", "Quality")]
causalChain(dt1)
class(dt1)
class(dt1$Quality)
?calibrate
dt1 <- calibrate(dt)
data("Krook")
Krook
library(tidyverse)
Krook %>% dim
dt1 <- column_to_rownames(dt, CASE = "rowname")
?column_to_rownames
dt1 <- column_to_rownames(dt, CASE)
dt
dt1 <- column_to_rownames(dt, "CASE")
dt1
causalChain(dt1)
necessity <- superSubset(dt1, outcome = "Use.behavior")
necessity
sufficiency1 <- truthTable(dt, outcome = "Use.behavior")
sufficiency1 <- truthTable(dt1, outcome = "Use.behavior")
sufficiency1
sufficiency2 <- eqmcc(sufficiency1)
sufficiency2 <- minimize(sufficiency1)
sufficiency2
?causalChain
sufficiency2$PIchart
dt1 <- dt1[,c("Professionality", "Communication", "Search", "Appearance", "Quality")]
necessity <- superSubset(dt1, outcome = "Use.behavior")
dt1 <- column_to_rownames(dt, "CASE")
dt1 <- dt1[,c("Professionality", "Communication", "Search", "Appearance", "Quality", "Use.behavior")]
necessity <- superSubset(dt1, outcome = "Use.behavior")
sufficiency1 <- truthTable(dt1, outcome = "Use.behavior")
sufficiency2 <- minimize(sufficiency1)
sufficiency2$PIchart
sufficiency1
necessity
sufficiency2$pims$i.sol$C1P1
sufficiency2$pims
sufficiency2$PIchart
sufficiency1
sufficiency1
necessity$coms
necessity$incl.cov
necessity2 <- minimize(necessity)
necessity$use.letters
necessity$options
necessity$incl.cov
sufficiency1
sufficiency1
```{r setup, include=FALSE}
library(tidyverse)
library(broom)
```
```{parameters}
set.seed(1)
#假设有100个人，每个人申请，不违约的概率是pi，每个人申请的钱都是1，所以总共要100.公司有20用来满足申请。假如利率是1.1.
rate <- 1.6
quota <- 5000
n <- 100000
quota/n
id <- seq(1,n)
mean_m <- mean_f <- 0.5
sd_m <- 0.1
sd_f <- 0.09
p_m <- rnorm(n/2, mean = mean_m, sd = sd_m)
p_f <- rnorm(n/2, mean = mean_f, sd = sd_f)
p <- c(p_m, p_f)
p <- ifelse(p >= 1, 1, p)
p <- ifelse(p <= 0, 0, p)
sex <- c(rep(1, n/2), rep(0, n/2))
summary(p)
dt <- cbind(id, sex, p) %>% as.data.frame()
dt$buweiyue <- 0
dt$rank <- n + 1 - rank(dt$p)
threshold <- (dt %>% subset(rank == quota))$p
for (i in 1:nrow(dt)) {
dt[i, ]$buweiyue <- sample(c(0,1), size = 1, replace = F, prob = c(1 - dt[i,]$p, dt[i,]$p))
}
dt$sex1 <- dt$sex %>% as.factor()
ggplot(data = dt, aes(x = p)) +
geom_density(aes(color = sex1)) +
scale_color_discrete(name = "性别", labels = c("女", "男")) +
geom_vline(xintercept = threshold) +
xlab("还款概率") +
ylab("概\n率\n密\n度") +
annotate("text", x = threshold, y = -0.09, label = "阈值")  +
theme_classic() +
theme(axis.title.y = element_text(angle = 0, vjust = 0.5),
axis.title = element_text(size = rel(1.2)),
axis.text = element_text(size = rel(1.2)),
legend.position = "top") +
scale_x_continuous(labels = scales::percent)
ggsave("density1.jpg", width = 10, height = 6.18,  path = "C:/nuts/projects_active/theory_ml/pic")
```
```{sims}
# 1 第一种情况，如果给排名最靠前的20个人，则回报为
dt_sim1 <- dt
dt_sim1$give <- ifelse(dt_sim1$rank <= quota, 1, 0)
dt_sim1$return <- dt_sim1$p * rate * dt_sim1$give
return_sim1 <- sum(dt_sim1$return)
# 2 第二种情况，只给rate * p >= 1的人
dt_sim2 <- dt
dt_sim2$give <- ifelse(dt_sim2$p * rate >= 1, 1, 0)
n_give <- sum(dt_sim2$give)
dt_sim2$return <- dt_sim2$p * rate * dt_sim2$give
return_sim2 <- sum(dt_sim2$return) + quota - n_give
# 3 第三种情况，从高排名给起，pi概率不违约的人有pi的可能性获得，直到20个人发完。
dt_sim3 <- dt %>% arrange(rank)
dt_sim3$give <- 0
counter <- 1
i <- 1
while (counter <= quota & i <= nrow(dt_sim3)) {
dt_sim3[i,]$give <- sample(c(0,1), size = 1, replace = F, prob = c(1 - dt_sim3[i,]$p, dt_sim3[i,]$p))
counter <- ifelse(dt_sim3[i,]$give == 1, counter + 1, counter)
i <- i + 1
}
dt_sim3$return <- dt_sim3$p * rate * dt_sim3$give
sum(dt_sim3$give)
return_sim3 <- sum(dt_sim3$return)
```
```{r inequaliy}
model_ineq <- give ~ sex
ineq_sim1 <- glm(model_ineq, data = dt_sim1, family = "binomial" )
ineq_sim2 <- glm(model_ineq, data = dt_sim2, family = "binomial" )
ineq_sim3 <- glm(model_ineq, data = dt_sim3, family = "binomial" )
co_sim1 <- tidy(ineq_sim1)[2,2]
co_sim2 <-tidy(ineq_sim2)[2,2]
co_sim3 <-tidy(ineq_sim3)[2,2]
```
```{r loss function}
# 如果不违约概率为1，给了我，loss就是0；如果不违约概率为1，不给我，loss就是1. 如果不违约概率是0.5，那应该有50%的概率给我，如果给了我，loss
dt_sim1$loss <- ifelse(dt_sim1$give == 1, 1- dt_sim1$p, dt_sim1$p)
dt_sim3$loss <- ifelse(dt_sim3$give == 1, 1- dt_sim3$p, dt_sim3$p)
loss_sim1 <- sum(dt_sim1$loss)
loss_sim2 <- sum(dt_sim2$loss)
loss_sim3 <- sum(dt_sim3$loss)
# false positive 意味着，buweiyue = 0 而 give = 1； false negative 意味着，buweiyue = 1 而give = 0
quota
other_quota <- max((dt_sim3 %>% subset(give == 1))$rank)
dt_sim1$false_pos <- dt_sim1$buweiyue == 0 & dt_sim1$give == 1
dt_sim3$false_pos <- dt_sim3$buweiyue == 0 & dt_sim3$give == 1
dt_sim1$false_neg <- dt_sim1$buweiyue == 1 & dt_sim1$give == 0
dt_sim3$false_neg <- dt_sim3$buweiyue == 1 & dt_sim3$give == 0
table_sim1 <- table(dt_sim1$sex, dt_sim1$false_pos) %>% addmargins()
false_pos_sim1 <- table_sim1[,2]/table_sim1[,3]
table_sim3 <- table(dt_sim3$sex, dt_sim3$false_pos) %>% addmargins()
false_pos_sim3 <- table_sim3[,2]/table_sim3[,3]
table_sim1 <- table(dt_sim1$sex, dt_sim1$false_neg) %>% addmargins()
false_neg_sim1 <- table_sim1[,2]/table_sim1[,3]
table_sim3 <- table(dt_sim3$sex, dt_sim3$false_neg) %>% addmargins()
false_neg_sim3 <- table_sim3[,2]/table_sim3[,3]
(dt_sim3 %>% subset(give == 1))$p %>% min
(dt_sim3 %>% subset(give == 1))$rank %>% max
###########
atrisk_sim1 <- dt_sim1 %>% subset(rank <= other_quota)
atrisk_sim3 <- dt_sim3 %>% subset(rank <= other_quota)
table(atrisk_sim1$sex)
table_sim1 <- table(atrisk_sim1$sex, atrisk_sim1$false_pos) %>% addmargins()
false_pos_sim1 <- (table_sim1[,2]/table_sim1[,3]) %>% round(4)
table_sim3 <- table(atrisk_sim3$sex, atrisk_sim3$false_pos) %>% addmargins()
false_pos_sim3 <- (table_sim3[,2]/table_sim3[,3] ) %>% round(4)
table_sim1 <- table(atrisk_sim1$sex, atrisk_sim1$false_neg) %>% addmargins()
false_neg_sim1 <- (table_sim1[,2]/table_sim1[,3] ) %>% round(4)
table_sim3 <- table(atrisk_sim3$sex, atrisk_sim3$false_neg) %>% addmargins()
false_neg_sim3 <- (table_sim3[,2]/table_sim3[,3] ) %>% round(4)
```
```{r result}
quota / n
n_give < quota
c(co_sim1, co_sim2, co_sim3)
c(return_sim1, return_sim2, return_sim3)
c(loss_sim1, loss_sim2, loss_sim3)
sum(dt$p >= threshold)
false_pos_sim1[1] - false_pos_sim1[2]
false_pos_sim3[1] - false_pos_sim3[2]
false_neg_sim1[1] - false_neg_sim1[2]
false_neg_sim3[1] - false_neg_sim3[2]
sum(dt$buweiyue) / nrow(dt)
```
c(loss_sim1, loss_sim2, loss_sim3)
table_sim1
fpr_sim1 <- sum(dt_sim1$false_pos)/sum(dt_sim1$buweiyue == 0)
fpr_sim1
fpr_sim1 <- ((sum(dt_sim1$false_pos)/sum(dt_sim1$buweiyue == 0)) *100) %>% round(2)
fpr_sim1
fpr_sim3 <- ((sum(dt_sim3$false_pos)/sum(dt_sim3$buweiyue == 0)) *100) %>% round(2)
fpr_sim3
fnr_sim1 <- ((sum(dt_sim1$false_neg)/sum(dt_sim1$buweiyue == 1)) *100) %>% round(2)
fnr_sim1
fnr_sim3 <- ((sum(dt_sim3$false_neg)/sum(dt_sim3$buweiyue == 1)) *100) %>% round(2)
fnr_sim3
dt_sim1_m <- dt_sim1 %>% subset(dt_sim1$sex == 1)
dt_sim1_f <- dt_sim1 %>% subset(dt_sim1$sex == 0)
dt_sim3_f <- dt_sim3 %>% subset(dt_sim3$sex == 0)
dt_sim3_m <- dt_sim3 %>% subset(dt_sim3$sex == 1)
dt_sim3_f <- dt_sim3 %>% subset(dt_sim3$sex == 0)
fpr_sim1_m <- ((sum(dt_sim1_m$false_pos)/sum(dt_sim1_m$buweiyue == 0)) *100) %>% round(2)
fpr_sim3_m <- ((sum(dt_sim3_m$false_pos)/sum(dt_sim3_m$buweiyue == 0)) *100) %>% round(2)
fnr_sim1_m <- ((sum(dt_sim1_m$false_neg)/sum(dt_sim1_m$buweiyue == 1)) *100) %>% round(2)
fnr_sim3_m <- ((sum(dt_sim3_m$false_neg)/sum(dt_sim3_m$buweiyue == 1)) *100) %>% round(2)
fpr_sim1_m
fpr_sim3_m
fnr_sim1_m
fnr_sim3_m
fpr_sim1_f <- ((sum(dt_sim1_f$false_pos)/sum(dt_sim1_f$buweiyue == 0)) *100) %>% round(2)
fpr_sim3_f <- ((sum(dt_sim3_f$false_pos)/sum(dt_sim3_f$buweiyue == 0)) *100) %>% round(2)
fnr_sim1_f <- ((sum(dt_sim1_f$false_neg)/sum(dt_sim1_f$buweiyue == 1)) *100) %>% round(2)
fnr_sim3_f <- ((sum(dt_sim3_f$false_neg)/sum(dt_sim3_f$buweiyue == 1)) *100) %>% round(2)
fpr_sim1_f <- ((sum(dt_sim1_f$false_pos)/sum(dt_sim1_f$buweiyue == 0)) *100) %>% round(2)
fpr_sim3_f <- ((sum(dt_sim3_f$false_pos)/sum(dt_sim3_f$buweiyue == 0)) *100) %>% round(2)
fnr_sim1_f <- ((sum(dt_sim1_f$false_neg)/sum(dt_sim1_f$buweiyue == 1)) *100) %>% round(2)
fnr_sim3_f <- ((sum(dt_sim3_f$false_neg)/sum(dt_sim3_f$buweiyue == 1)) *100) %>% round(2)
fpr_sim1_f
fpr_sim3_f
fnr_sim1_f
fnr_sim3_f
sum(dt_sim3_f$buweiyue == 0)
sum(dt_sim1_f$buweiyue == 1)
fpr_sim1
fpr_sim1_m
fpr_sim1_f
fnr_sim1
fnr_sim1_m
fnr_sim1_f
fpr_sim3
fpr_sim3_m
fpr_sim3_f
c(fpr_sim1, fpr_sim1_m, fpr_sim1_f, fpr_sim1_m - fpr_sim1_f)
c(fpr_sim3, fpr_sim3_m, fpr_sim3_f, fpr_sim3_m - fpr_sim3_f)
c(fnr_sim1, fnr_sim1_m, fnr_sim1_f, fnr_sim1_m - fnr_sim1_f)
c(fnr_sim3, fnr_sim3_m, fnr_sim3_f, fnr_sim3_m - fnr_sim3_f)
p1_yfd <- plot_ly(
x = dt_yfd$class %>% levels(), y = dt_yfd$subject %>% levels(),
z = m1_yfd, type = "heatmap",
zmax = 1000
) %>%
layout(paper_bgcolor = 'transparent',
title = list(text = '猿辅导课程数量', font = list(size = 28, color="black"), x = 0.2, y = 0.8),
font=list(size = 14, color = "black"))
library(tidyverse)
library(readxl)
library(plotly)
library(extrafont)
Sys.setlocale("LC_CTYPE", "Chinese")
#font <- "STXihei"
load("C:/0work/0tal/1 online_db/outputdata.RData")
p1_yfd <- plot_ly(
x = dt_yfd$class %>% levels(), y = dt_yfd$subject %>% levels(),
z = m1_yfd, type = "heatmap",
zmax = 1000
) %>%
layout(paper_bgcolor = 'transparent',
title = list(text = '猿辅导课程数量', font = list(size = 28, color="black"), x = 0.2, y = 0.8),
font=list(size = 14, color = "black"))
p1_yfd
p1_yfd <- plot_ly(
x = dt_yfd$class %>% levels(), y = dt_yfd$subject %>% levels(),
z = m1_yfd, type = "heatmap",
zmax = 1000, zmin = 1
) %>%
layout(paper_bgcolor = 'transparent',
title = list(text = '猿辅导课程数量', font = list(size = 28, color="black"), x = 0.2, y = 0.8),
font=list(size = 14, color = "black"))
p1_yfd
max(dt_gt$unitprice, dt_wx$unitprice)
max(dt_gt$unitprice, dt_wx$unitprice, na.rm = T)
max(dt_gt$unitprice, dt_wx$unitprice, dt_zyb$unitprice, dt_yfd$unitprice, na.rm = T)
table(dt_gt$unitprice)
table(dt_gt$unitprice)
table(dt_yfd$unitprice)
table(dt_zyb$unitprice)
table(dt_wx$unitprice)
p2_yfd <- plot_ly(
x = dt_yfd$class %>% levels(), y = dt_yfd$subject %>% levels(),
z = m2_yfd, type = "heatmap",
zmax = max_unitprice, zmin = 0
) %>%
layout(paper_bgcolor = 'transparent',
title = list(text = '猿辅导课程小时单价', font = list(size = 28, color="black"), x = 0.2, y = 0.8),
annotations = list(x = "三年级", y = "编程",xref = "三年级", yref = "编程", showarrow = F, text = "注：编程单价113元左右"),
font=list(size = 14, color = "black"))
max_unitprice <- 115
p2_yfd <- plot_ly(
x = dt_yfd$class %>% levels(), y = dt_yfd$subject %>% levels(),
z = m2_yfd, type = "heatmap",
zmax = max_unitprice, zmin = 0
) %>%
layout(paper_bgcolor = 'transparent',
title = list(text = '猿辅导课程小时单价', font = list(size = 28, color="black"), x = 0.2, y = 0.8),
annotations = list(x = "三年级", y = "编程",xref = "三年级", yref = "编程", showarrow = F, text = "注：编程单价113元左右"),
font=list(size = 14, color = "black"))
p2_yfd
p2_yfd <- plot_ly(
x = dt_yfd$class %>% levels(), y = dt_yfd$subject %>% levels(),
z = m2_yfd, type = "heatmap",
zmax = max_unitprice, zmin = 0
) %>%
layout(paper_bgcolor = 'transparent',
title = list(text = '猿辅导课程小时单价', font = list(size = 28, color="black"), x = 0.2, y = 0.8),
annotations = list(x = "三年级", y = "编程",xref = "三年级", yref = "编程", showarrow = F, text = "注：编程单价113元左右"),
font=list(size = 14, color = "black"))
p2_yfd
p2_gt <- plot_ly(
x = dt_gt$class %>% levels(), y = dt_gt$subject %>% levels(),
z = m2_gt, type = "heatmap",
zmax = max_unitprice, zmin = 0
) %>%
layout(paper_bgcolor = 'transparent',
title = list(text = '高途课程单价', font = list(size = 28, color="black"), x = 0.2, y = 0.8),
font=list(size = 14, color = "black"))
p2_gt
p2_zyb <- plot_ly(
x = dt_zyb$class %>% levels(), y = dt_zyb$subject %>% levels(),
z = m2_zyb, type = "heatmap",
zmax = max_unitprice, zmin = 0
) %>%
layout(paper_bgcolor = 'transparent',
title = list(text = '作业帮课程单价', font = list(size = 28, color="black"), x = 0.2, y = 0.8),
font=list(size = 14, color = "black"))
p2_zyb
) %>%
layout(paper_bgcolor = 'transparent',
title = list(text = '网校课程单价', font = list(size = 28, color="black"), x = 0.2, y = 0.8),
font=list(size = 14, color = "black"))
p2_wx <- plot_ly(
x = dt_wx$class %>% levels(), y = dt_wx$subject %>% levels(),
z = m2_wx, type = "heatmap",
zmax = max_unitprice, zmin = 0
) %>%
layout(paper_bgcolor = 'transparent',
title = list(text = '网校课程单价', font = list(size = 28, color="black"), x = 0.2, y = 0.8),
font=list(size = 14, color = "black"))
p2_wx
eng <- readxl::read_xlsx("C:/0work/0tal/20190721网校竞品监测/20190904幼儿赛道/幼儿3赛道产品信息1021.xlsx", sheet = "英语赛道")
library(tidyverse)
library(readxl)
library(plotly)
Sys.setlocale("LC_CTYPE", "Chinese")
#font <- "STXihei"
load("C:/0work/0tal/1 online_db/outputdata.RData")
dir1 <- "C:/Users/david/Documents/GitHub/lidaidavid.github.io/3-8products/"
#dir1 <- "https://lidaidavid.github.io/3-8products/"
eng <- readxl::read_xlsx("C:/0work/0tal/20190721网校竞品监测/20190904幼儿赛道/幼儿3赛道产品信息1021.xlsx", sheet = "英语赛道")
eng
eng <- readxl::read_xlsx("C:/0work/0tal/20190721网校竞品监测/20190904幼儿赛道/幼儿3赛道产品信息1021.xlsx", sheet = "英语赛道")
eng <- readxl::read_xlsx("dt3.xlsx", sheet = "eng")
head(eng)
head(eng[,"评分"])
head(eng[,c(2)])
eng <- readxl::read_xlsx("dt3.xlsx", sheet = "eng") %>% as.table()
?knitr::kable
install.packages("xaringan")
list(css)
list_css()
xaringan:::list_css()
l
#setwd("C:/Users/david/Documents/GitHub/lidaidavid.github.io/20191021 classes/")
getwd()
library(tidyverse)
library(readxl)
library(plotly)
library(extrafont)
Sys.setlocale("LC_CTYPE", "Chinese")
#font <- "STXihei"
load("C:/0work/0tal/1 online_db/outputdata.RData")
dir1 <- "C:/Users/david/Documents/GitHub/lidaidavid.github.io/20191021classes/"
p0 <- plot_ly(x = whole$brand, y = whole$total,
type = "bar"
) %>%
layout(paper_bgcolor = 'transparent',
title = list(text = '秋季系统课程总数', font = list(size = 28, color="black"), x = 0.2, y = 0.8),
zmax = 1000,
font=list(size = 14, color = "black"))
p0
p0 <- plot_ly(x = whole$brand, y = whole$total,
type = "bar"
) %>%
layout(paper_bgcolor = 'transparent',
title = list(text = '秋季系统课程总数', font = list(size = 28, color="black"), x = 0.2, y = 0.8),
font=list(size = 14, color = "black"))
p0
p1_yfd <- plot_ly(
x = dt_yfd$class %>% levels(), y = dt_yfd$subject %>% levels(),
z = m1_yfd, type = "heatmap"
) %>%
layout(paper_bgcolor = 'transparent',
title = list(text = '猿辅导课程数量', font = list(size = 28, color="black"), x = 0.2, y = 0.8),
font=list(size = 14, color = "black"))
p1_yfd
table(dt_gt$unitprice)
table(dt_gt$unitprice)
table(dt_wx$unitprice)
table(dt_zyb$unitprice)
table(dt_yfd$unitprice)
library(tidyverse)
library(readxl)
library(plotly)
library(knitr)
?kable
install.packages("kableExtra")
library(kableExtra)
?kable_styling
?mutate
lit <- readxl::read_xlsx("dt3.xlsx", sheet = "lit") #%>% as.data.frame()
eng1 <- eng[,-c(2, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17)]
setwd(dir1)
dir1 <- "C:/Users/david/Documents/GitHub/lidaidavid.github.io/3-8products/"
setwd(dir1)
eng <- readxl::read_xlsx("dt3.xlsx", sheet = "eng") #%>% as.data.frame()
head(eng)
?sort
?arrange
eng <- readxl::read_xlsx("dt3.xlsx", sheet = "eng") %>% arrange(desc())
eng <- readxl::read_xlsx("dt3.xlsx", sheet = "eng") %>% arrange()
head(eng)
eng <- readxl::read_xlsx("dt3.xlsx", sheet = "eng") %>% arrange(desc("评分"))
eng <- readxl::read_xlsx("dt3.xlsx", sheet = "eng") %>% arrange(desc(评分))
eng <- readxl::read_xlsx("dt3.xlsx", sheet = "eng") %>% arrange(desc(`评分`))
eng <- readxl::read_xlsx("dt3.xlsx", sheet = "eng") %>% arrange(desc(`评分`))
?kable
colnames(eng)
label_eng <-colnames(eng)
colnames(eng) <- paste("V", seq(1, ncol(eng)), sep = F)
seq(1, ncol(eng))
paste("V", seq(1, ncol(eng)), sep = F)
colnames(eng) <- paste("v", seq(1, ncol(eng)), sep = "")
colnames(eng)
eng <- eng %>% arrange(desc(v2))
head(eng)
col_eng1 <- c(2, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17)
label_eng[col_eng1]
label_eng
label_lit
eng <- readxl::read_xlsx("dt3.xlsx", sheet = "eng")
label_eng <- colnames(eng)
colnames(eng) <- paste("v", seq(1, ncol(eng)), sep = "")
eng <- eng %>% arrange(desc(v2))
lit <- readxl::read_xlsx("dt3.xlsx", sheet = "lit")
label_lit <- colnames(lit)
colnames(lit) <- paste("v", seq(1, ncol(lit)), sep = "")
lit <- lit %>% arrange(desc(v2))
math <- readxl::read_xlsx("dt3.xlsx", sheet = "math")
label_math <- colnames(math)
colnames(math) <- paste("v", seq(1, ncol(math)), sep = "")
math <- math %>% arrange(desc(v2))
label_eng
label_lit
label_math
col_lit1
col_eng1 <- c(2, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17)
col_eng2 <- c(2, 3, 4, 5, 6, 18, 19, 20, 21)
eng1 <- eng[,col_eng1]
eng2 <- eng[,col_eng2]
col_lit1 <- c(2, 3, 8,9,10,11,12,13,14,15,16,17,18,19,20,21)
col_lit2 <- c(2, 3, 4, 5, 6, 7, seq(22, 29))
lit1 <- lit[, col_lit1]
lit2 <- lit[, col_lit2]
col_math1 <- c(2, 3, 7,8,9,10,11,12,13,14,15,21)
col_math2 <- c(2, 3, seq(4,6), seq(16, 20), 22, 23)
math1 <- math[, col_math1]
math2 <- math[, col_math2]
eng1
eng2
xaringan:::list_css()
